<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.yingjia.mapper.IngredientsMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.yingjia.po.Ingredients" >
    <id column="ingre_id" property="ingreId" jdbcType="INTEGER" />
    <result column="ingre_name" property="ingreName" jdbcType="VARCHAR" />
    <result column="ingre_protein" property="ingreProtein" jdbcType="INTEGER" />
    <result column="ingre_fat" property="ingreFat" jdbcType="INTEGER" />
    <result column="ingre_carbohydrate" property="ingreCarbohydrate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ingre_id, ingre_name, ingre_protein, ingre_fat, ingre_carbohydrate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.yingjia.po.IngredientsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ingredients
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ingredients
    where ingre_id = #{ingreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ingredients
    where ingre_id = #{ingreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.yingjia.po.IngredientsExample" >
    delete from ingredients
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.yingjia.po.Ingredients" >
    insert into ingredients (ingre_id, ingre_name, ingre_protein, 
      ingre_fat, ingre_carbohydrate)
    values (#{ingreId,jdbcType=INTEGER}, #{ingreName,jdbcType=VARCHAR}, #{ingreProtein,jdbcType=INTEGER}, 
      #{ingreFat,jdbcType=INTEGER}, #{ingreCarbohydrate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.yingjia.po.Ingredients" >
    insert into ingredients
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ingreId != null" >
        ingre_id,
      </if>
      <if test="ingreName != null" >
        ingre_name,
      </if>
      <if test="ingreProtein != null" >
        ingre_protein,
      </if>
      <if test="ingreFat != null" >
        ingre_fat,
      </if>
      <if test="ingreCarbohydrate != null" >
        ingre_carbohydrate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ingreId != null" >
        #{ingreId,jdbcType=INTEGER},
      </if>
      <if test="ingreName != null" >
        #{ingreName,jdbcType=VARCHAR},
      </if>
      <if test="ingreProtein != null" >
        #{ingreProtein,jdbcType=INTEGER},
      </if>
      <if test="ingreFat != null" >
        #{ingreFat,jdbcType=INTEGER},
      </if>
      <if test="ingreCarbohydrate != null" >
        #{ingreCarbohydrate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.yingjia.po.IngredientsExample" resultType="java.lang.Integer" >
    select count(*) from ingredients
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ingredients
    <set >
      <if test="record.ingreId != null" >
        ingre_id = #{record.ingreId,jdbcType=INTEGER},
      </if>
      <if test="record.ingreName != null" >
        ingre_name = #{record.ingreName,jdbcType=VARCHAR},
      </if>
      <if test="record.ingreProtein != null" >
        ingre_protein = #{record.ingreProtein,jdbcType=INTEGER},
      </if>
      <if test="record.ingreFat != null" >
        ingre_fat = #{record.ingreFat,jdbcType=INTEGER},
      </if>
      <if test="record.ingreCarbohydrate != null" >
        ingre_carbohydrate = #{record.ingreCarbohydrate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ingredients
    set ingre_id = #{record.ingreId,jdbcType=INTEGER},
      ingre_name = #{record.ingreName,jdbcType=VARCHAR},
      ingre_protein = #{record.ingreProtein,jdbcType=INTEGER},
      ingre_fat = #{record.ingreFat,jdbcType=INTEGER},
      ingre_carbohydrate = #{record.ingreCarbohydrate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.yingjia.po.Ingredients" >
    update ingredients
    <set >
      <if test="ingreName != null" >
        ingre_name = #{ingreName,jdbcType=VARCHAR},
      </if>
      <if test="ingreProtein != null" >
        ingre_protein = #{ingreProtein,jdbcType=INTEGER},
      </if>
      <if test="ingreFat != null" >
        ingre_fat = #{ingreFat,jdbcType=INTEGER},
      </if>
      <if test="ingreCarbohydrate != null" >
        ingre_carbohydrate = #{ingreCarbohydrate,jdbcType=INTEGER},
      </if>
    </set>
    where ingre_id = #{ingreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.yingjia.po.Ingredients" >
    update ingredients
    set ingre_name = #{ingreName,jdbcType=VARCHAR},
      ingre_protein = #{ingreProtein,jdbcType=INTEGER},
      ingre_fat = #{ingreFat,jdbcType=INTEGER},
      ingre_carbohydrate = #{ingreCarbohydrate,jdbcType=INTEGER}
    where ingre_id = #{ingreId,jdbcType=INTEGER}
  </update>
</mapper>